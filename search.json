[{"path":"https://docs.ropensci.org/codemetar/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/codemetar/CONTRIBUTING.html","id":"repository-structure","dir":"","previous_headings":"","what":"Repository structure","title":"Contributing Guidelines","text":"repository structured standard R package following conventions outlined Writing R extensions manual. additional files provided part built R package listed .Rbuildignore, .travis.yml, used continuous testing integration.","code":""},{"path":"https://docs.ropensci.org/codemetar/CONTRIBUTING.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"Contributing Guidelines","text":"code package found R/, (except compiled source code, used, /src). functions thoroughly documented roxygen2 notation; see Documentation.","code":""},{"path":"https://docs.ropensci.org/codemetar/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Contributing Guidelines","text":"new feature bug-fix include unit-test demonstrating change. Unit tests follow testthat framework files tests/testthat. Please make sure testing suite passes issuing pull request. can done running check() devtools package, also check consistent documentation, etc. package uses travis continuous testing mechanism R ensure test suite run push Github. icon top README.md indicates whether tests currently passing. package also uses codecov.io measure test coverage. code can covered automated tests (particular, functions involving user prompts), try avoid decreasing coverage writing unit tests contributed code. Codecov.io flag PRs decrease coverage.","code":""},{"path":"https://docs.ropensci.org/codemetar/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Contributing Guidelines","text":"function documentation generated automatically. Please edit documentation files man/ NAMESPACE. Instead, construct appropriate roxygen2 documentation function files R/ . documentation generated running document() function devtools package. Please consult Advanced R programming guide workflow unfamiliar . Note functions include examples documentation. Please use \\dontrun examples take seconds execute require internet connection. Likewise, README.md file base directory edited directly. file created automatically code runs examples shown, helping ensure functioning advertised consistent package README vignette. Instead, edit README.Rmd source file manuscripts run make build README.","code":""},{"path":"https://docs.ropensci.org/codemetar/CONTRIBUTING.html","id":"general-development-goals--guidelines","dir":"","previous_headings":"","what":"General Development Goals & Guidelines","title":"Contributing Guidelines","text":"many high-level functions, Using sensible defaults, (driven use cases). Docs point advanced users lower-level API need special cases. Maintain consistent user-facing API.","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"codemetar-generate-codemeta-metadata-for-r-packages","dir":"Articles","previous_headings":"","what":"codemetar: generate codemeta metadata for R packages","title":"Intro to codemetar, Codemeta creator for R packages","text":"codemetar? ‘Codemeta’ Project defines ‘JSON-LD’ format describing software metadata, detailed https://codemeta.github.io. package provides utilities generate, parse, modify codemeta.jsonld files automatically R packages, well tools examples working codemeta json-ld generally. three main goals: Quickly generate valid codemeta.json file valid R package. , automatically extract much metadata possible using DESCRIPTION file, well extracting metadata common best-practices presence Travis badges README, etc. Facilitate addition metadata fields codemeta.json file, well general manipulation codemeta files. Support ability crosswalk terms used metadata standards, identified Codemeta Project Community, see https://codemeta.github.io/crosswalk/","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"why-create-a-codemeta-json-for-your-package","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages","what":"Why create a codemeta.json for your package?","title":"Intro to codemetar, Codemeta creator for R packages","text":"bother creating codemeta.json package? R packages encode lots metadata DESCRIPTION file, README, places, telling users developers package purpose, authors, license, dependencies, information facilitates discovery, adoption, credit software. Unfortunately, software language records metadata different format, information hard search engines, software repositories, developers find integrate. generating codemeta.json file, turn metadata format can easily crosswalk metadata many software languages. CodeMeta built schema.org simple structured data format developed major search engines like Google Bing improve discoverability search. CodeMeta also understood significant software archiving efforts Software Heritage Project, seeks permanently archive open source software. general information CodeMeta Project defining software metadata, see https://codemeta.github.io. particular, new users might want start User Guide, looking learn JSON-LD consuming existing codemeta files see Developer Guide.","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"installation-and-usage-requirements","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages","what":"Installation and usage requirements","title":"Intro to codemetar, Codemeta creator for R packages","text":"can install latest version CRAN using: can also install development version codemetar GitHub : optimal results need good internet connection. package queries utils::available.packages() CRAN Bioconductor packages; GitHub API via gh package, finds GitHub repo URL DESCRIPTION git remote. GitHub API queried find preferred README, repo topics. use codemetar many packages GITHUB_PAT better; R-hub sysreqs API parse SystemRequirements. machine offline, minimal codemeta.json created. internet connection poor firewalls, codemeta creation might indefinitely hang.","code":"install.packages(\"codemetar\") # install.packages(\"devtools\") devtools::install_github(\"ropensci/codemetar\")"},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"create-a-codemeta-json-in-one-function-call","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages","what":"Create a codemeta.json in one function call","title":"Intro to codemetar, Codemeta creator for R packages","text":"codemetar can take path source package root glean much information possible.  default often within package folder ’ll simply run codemetar::write_codemeta().","code":"codemetar::write_codemeta() … Getting CRAN metadata from RStudio CRAN mirror ✔ Got CRAN metadata! codemetar has the highest opinion of this R package :-) … Asking README URL from GitHub API ✔ Got README URL! … Asking README URL from GitHub API ✔ Got README URL! … Getting repo topics from GitHub API ✔ Got repo topics! library(\"magrittr\") \"../../codemeta.json\" %>%   details::details(summary = \"codemetar's codemeta.json\",                    lang = \"json\") {   \"@context\": \"https://doi.org/10.5063/schema/codemeta-2.0\",   \"@type\": \"SoftwareSourceCode\",   \"identifier\": \"codemetar\",   \"description\": \"The 'Codemeta' Project defines a 'JSON-LD' format for describing software metadata, as detailed at <https://codemeta.github.io>. This package provides utilities to generate, parse, and modify 'codemeta.json' files automatically for R packages, as well as tools and examples for working with 'codemeta.json' 'JSON-LD' more generally.\",   \"name\": \"codemetar: Generate 'CodeMeta' Metadata for R Packages\",   \"relatedLink\": [\"https://docs.ropensci.org/codemetar/\", \"https://CRAN.R-project.org/package=codemetar\"],   \"codeRepository\": \"https://github.com/ropensci/codemetar\",   \"issueTracker\": \"https://github.com/ropensci/codemetar/issues\",   \"license\": \"https://spdx.org/licenses/GPL-3.0\",   \"version\": \"0.3.5\",   \"programmingLanguage\": {     \"@type\": \"ComputerLanguage\",     \"name\": \"R\",     \"url\": \"https://r-project.org\"   },   \"runtimePlatform\": \"R version 4.3.2 (2023-10-31)\",   \"provider\": {     \"@id\": \"https://cran.r-project.org\",     \"@type\": \"Organization\",     \"name\": \"Comprehensive R Archive Network (CRAN)\",     \"url\": \"https://cran.r-project.org\"   },   \"author\": [     {       \"@type\": \"Person\",       \"givenName\": \"Carl\",       \"familyName\": \"Boettiger\",       \"email\": \"cboettig@gmail.com\",       \"@id\": \"https://orcid.org/0000-0002-1642-628X\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Maëlle\",       \"familyName\": \"Salmon\",       \"@id\": \"https://orcid.org/0000-0002-2815-0399\"     }   ],   \"contributor\": [     {       \"@type\": \"Person\",       \"givenName\": \"Anna\",       \"familyName\": \"Krystalli\",       \"@id\": \"https://orcid.org/0000-0002-2378-4915\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Maëlle\",       \"familyName\": \"Salmon\",       \"@id\": \"https://orcid.org/0000-0002-2815-0399\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Katrin\",       \"familyName\": \"Leinweber\",       \"@id\": \"https://orcid.org/0000-0001-5135-5758\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Noam\",       \"familyName\": \"Ross\",       \"@id\": \"https://orcid.org/0000-0002-2136-0000\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Arfon\",       \"familyName\": \"Smith\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Jeroen\",       \"familyName\": \"Ooms\",       \"@id\": \"https://orcid.org/0000-0002-4035-0289\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Sebastian\",       \"familyName\": \"Meyer\",       \"@id\": \"https://orcid.org/0000-0002-1791-9449\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Michael\",       \"familyName\": \"Rustler\",       \"@id\": \"https://orcid.org/0000-0003-0647-7726\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Hauke\",       \"familyName\": \"Sonnenberg\",       \"@id\": \"https://orcid.org/0000-0001-9134-2871\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Sebastian\",       \"familyName\": \"Kreutzer\",       \"@id\": \"https://orcid.org/0000-0002-0734-2199\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Thierry\",       \"familyName\": \"Onkelinx\",       \"@id\": \"https://orcid.org/0000-0001-8804-4216\"     }   ],   \"copyrightHolder\": [     {       \"@type\": \"Person\",       \"givenName\": \"Carl\",       \"familyName\": \"Boettiger\",       \"email\": \"cboettig@gmail.com\",       \"@id\": \"https://orcid.org/0000-0002-1642-628X\"     }   ],   \"funder\": [     {       \"@type\": \"Organization\",       \"name\": \"rOpenSci\"     }   ],   \"maintainer\": [     {       \"@type\": \"Person\",       \"givenName\": \"Carl\",       \"familyName\": \"Boettiger\",       \"email\": \"cboettig@gmail.com\",       \"@id\": \"https://orcid.org/0000-0002-1642-628X\"     }   ],   \"softwareSuggestions\": [     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"withr\",       \"name\": \"withr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=withr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"covr\",       \"name\": \"covr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=covr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"details\",       \"name\": \"details\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=details\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"dplyr\",       \"name\": \"dplyr\",       \"version\": \">= 0.7.0\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=dplyr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"jsonld\",       \"name\": \"jsonld\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=jsonld\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"jsonvalidate\",       \"name\": \"jsonvalidate\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=jsonvalidate\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"knitr\",       \"name\": \"knitr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=knitr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"printr\",       \"name\": \"printr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=printr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"rmarkdown\",       \"name\": \"rmarkdown\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=rmarkdown\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"testthat\",       \"name\": \"testthat\",       \"version\": \">= 3.0.0\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=testthat\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"usethis\",       \"name\": \"usethis\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=usethis\"     }   ],   \"softwareRequirements\": {     \"1\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"R\",       \"name\": \"R\",       \"version\": \">= 3.2.0\"     },     \"2\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"commonmark\",       \"name\": \"commonmark\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=commonmark\"     },     \"3\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"crul\",       \"name\": \"crul\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=crul\"     },     \"4\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"desc\",       \"name\": \"desc\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=desc\"     },     \"5\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"gert\",       \"name\": \"gert\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=gert\"     },     \"6\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"gh\",       \"name\": \"gh\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=gh\"     },     \"7\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"jsonlite\",       \"name\": \"jsonlite\",       \"version\": \">= 1.6\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=jsonlite\"     },     \"8\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"magrittr\",       \"name\": \"magrittr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=magrittr\"     },     \"9\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"memoise\",       \"name\": \"memoise\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=memoise\"     },     \"10\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"methods\",       \"name\": \"methods\"     },     \"11\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"pingr\",       \"name\": \"pingr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=pingr\"     },     \"12\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"purrr\",       \"name\": \"purrr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=purrr\"     },     \"13\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"remotes\",       \"name\": \"remotes\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=remotes\"     },     \"14\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"sessioninfo\",       \"name\": \"sessioninfo\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=sessioninfo\"     },     \"15\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"stats\",       \"name\": \"stats\"     },     \"16\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"urltools\",       \"name\": \"urltools\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=urltools\"     },     \"17\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"xml2\",       \"name\": \"xml2\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=xml2\"     },     \"18\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"cli\",       \"name\": \"cli\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=cli\"     },     \"19\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"codemeta\",       \"name\": \"codemeta\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=codemeta\"     },     \"SystemRequirements\": null   },   \"isPartOf\": \"https://ropensci.org\",   \"keywords\": [\"metadata\", \"codemeta\", \"ropensci\", \"citation\", \"credit\", \"linked-data\", \"json-ld\", \"r\", \"rstats\", \"r-package\", \"peer-reviewed\"],   \"fileSize\": \"NAKB\",   \"releaseNotes\": \"https://github.com/ropensci/codemetar/blob/main/NEWS.md\",   \"readme\": \"https://github.com/ropensci/codemetar/blob/main/README.md\",   \"contIntegration\": [\"https://github.com/ropensci/codemetar/actions\", \"https://codecov.io/github/ropensci/codemetar?branch=main\"],   \"developmentStatus\": \"https://www.repostatus.org/\",   \"review\": {     \"@type\": \"Review\",     \"url\": \"https://github.com/ropensci/software-review/issues/130\",     \"provider\": \"https://ropensci.org\"   } }"},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"keep-codemeta-json-up-to-date","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages","what":"Keep codemeta.json up-to-date","title":"Intro to codemetar, Codemeta creator for R packages","text":"keep codemeta.json --date? particular, keep date DESCRIPTION? codemetar longer supports automatic sync, quite methods available . Choose one fits well workflow! rely devtools::release() since ask whether updated codemeta.json file exists. use git pre-commit hook prevents commit done DESCRIPTION newer codemeta.json. can use precommit package ’s “codemeta-description-updated” hook. ’s pre-commit hook (.e. don’t one created e.g. usethis::use_readme_rmd()), can create using use GitHub actions. Refer GitHub actions docs https://github.com/features/actions, example workflow provided package (type system.file(\"templates\", \"codemeta-github-actions.yml\", package = \"codemetar\")). can use cm-skip keyword commit message don’t want run specific commit. example workflow provided setup run push made master branch. setup designed ’re using git flow setup master branch committed pushed via pull requests. PR merge (completion GitHub action), master branch always date long don’t make manual changes codemeta.json file, won’t merge conflicts. Alternatively, can GitHub actions route run codemetar commit. try remember run git pull making new changes local project. However, forgot pull already committed new changes, fret , can use (git pull --rebase) rewind local changes top current upstream HEAD.","code":"script = readLines(system.file(\"templates\", \"description-codemetajson-pre-commit.sh\", package = \"codemetar\")) usethis::use_git_hook(\"pre-commit\",                      script = script) on:   push:     branches: master     paths:       - DESCRIPTION       - .github/workflows/main.yml  name: Render codemeta jobs:   render:     name: Render codemeta     runs-on: macOS-latest     if: \"!contains(github.event.head_commit.message, 'cm-skip')\"     steps:       - uses: actions/checkout@v1       - uses: r-lib/actions/setup-r@v1       - name: Install codemetar         run: Rscript -e 'install.packages(\"codemetar\")'       - name: Render codemeta         run: Rscript -e 'codemetar::write_codemeta()'       - name: Commit results         run: |           git commit codemeta.json -m 'Re-build codemeta.json' || echo \"No changes to commit\"           git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:${{ github.ref }} || echo \"No changes to commit\""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"a-brief-intro-to-common-terms-well-use","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages","what":"A brief intro to common terms we’ll use:","title":"Intro to codemetar, Codemeta creator for R packages","text":"Linked data: often use different words mean thing. sometimes word mean different things. Linked data seeks address issue using URIs (.e. URLs) make explicit. context: one likes typing long URLs time. instead, context JSON-LD file (\"@context\" element) gives us context terms use, , root URL. Usually schema.org domain specific ones also (eg codemeta) Schema.org: major initiative led Google search engines define simple widely used context link data web catalogue standard metadata fields CodeMeta Project: academic led community initiative formalise metadata fields included typical software metadata records introduce important fields clear equivalents. codemeta crosswalk provides explicit map metadata fields used broad range software repositories, registries archives JSON-LD: ‘linked data’ can represented many different formats, consistently proven bit tricky use, either consumers developers . JSON-LD provides simple adaptation JSON format, proven much popular audiences, allows express () linked-data concepts. now format choice expressing linked data Google many others. JSON-LD file valid JSON, JSON file can treated JSON-LD. codemetar: CodeMeta Project created tools several languages implement CodeMeta Crosswalk (using JSON-LD) help extract software metadata codemeta.json records. codemetar one tool, focused R R packages.","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"how-to-improve-your-packages-codemeta-json","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages","what":"How to improve your package’s codemeta.json?","title":"Intro to codemetar, Codemeta creator for R packages","text":"best way ensure codemeta.json complete possible set metadata usual places, needed add metadata. ensure metadata usual places, can run codemetar::give_opinions().","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"usual-terms-in-description","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages > How to improve your package’s codemeta.json?","what":"Usual terms in DESCRIPTION","title":"Intro to codemetar, Codemeta creator for R packages","text":"Fill BugReports URL. Using Authors@R notation allows much richer specification author roles, correct parsing given vs family names, email addresses. current implementation, developers may specify ORCID url author optional comment field Authors@R, e.g. allow codemetar associate identifier person. clearly something hack since R’s person object lacks explicit notion id, may frowned upon.","code":"Authors@R: c(person(given = \"Carl\",              family = \"Boettiger\",              role = c(\"aut\", \"cre\", \"cph\"),              email = \"cboettig@gmail.com\",              comment = c(ORCID = \"0000-0002-1642-628X\")))"},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"usual-terms-in-the-readme","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages > How to improve your package’s codemeta.json?","what":"Usual terms in the README","title":"Intro to codemetar, Codemeta creator for R packages","text":"README, can use badges continuous integration, repo development status (repostatus.org lifecycle.org), provider (e.g. CRAN).","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"github-repo-topics","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages > How to improve your package’s codemeta.json?","what":"GitHub repo topics","title":"Intro to codemetar, Codemeta creator for R packages","text":"package source hosted GitHub ’s way codemetar determine (URL DESCRIPTION, git remote URL) codemetar use GitHub repo topics keywords codemeta.json. also set keywords DESCRIPTION (see next section), codemetar merge two lists.","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"set-even-more-terms-via-description","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages > How to improve your package’s codemeta.json?","what":"Set even more terms via DESCRIPTION","title":"Intro to codemetar, Codemeta creator for R packages","text":"general, setting metadata via places stated earlier best solution metadata used tools (e.g. URLs DESCRIPTION can help package users, codemetar). DESCRIPTION file natural place specify metadata R package. codemetar package can detect certain additional terms CodeMeta context. Almost additional codemeta field can added read DESCRIPTION codemeta.json file (see codemetar:::additional_codemeta_terms list). CRAN requires prefix additional terms indicate use schema.org explicitly, e.g. keywords specified DESCRIPTION file : applicable, override values otherwise guessed source repository. Use comma-separated lists separate multiple values property, e.g. keywords. See DESCRIPTION file codemetar package example.","code":"X-schema.org-keywords: metadata, codemeta, ropensci, citation, credit, linked-data"},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"set-the-branch-that-codemetar-references","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages > How to improve your package’s codemeta.json?","what":"Set the branch that codemetar references","title":"Intro to codemetar, Codemeta creator for R packages","text":"number places codemetar reference github branch code hosted github (e.g. release notes, readme, etc.). default, codemetar use name “master” can change whatever default branch setting option “codemeta_branch” (e.g. options(codemeta_branch = \"main\") calling write_codemeta() use branch named “main” default branch).","code":""},{"path":"https://docs.ropensci.org/codemetar/articles/codemetar.html","id":"going-further","dir":"Articles","previous_headings":"codemetar: generate codemeta metadata for R packages","what":"Going further","title":"Intro to codemetar, Codemeta creator for R packages","text":"Check codemetar vignettes tutorials cool stuff can codemeta json-ld. new feature creation minimal schemaorg.json insertion website’s webpage Search Engine Optimization, write_minimeta argument write_codemeta() TRUE. e.g. use code chunk README.Rmd results=\"asis\". Refer Google documentation guidance.","code":"glue::glue('<script type=\"application/ld+json\">       {glue::glue_collapse(readLines(\"schemaorg.json\"), sep = \"\\n\")}     <\/script>')"},{"path":"https://docs.ropensci.org/codemetar/articles/examples-parsing-codemeta.html","id":"parsing-the-ropensci-corpus","dir":"Articles","previous_headings":"","what":"Parsing the ropensci corpus","title":"Parsing Codemeta Data","text":"ropensci corpus consists list codemeta files packages provided rOpenSci project, <ropensci.org>. provides good test-case large collection codemeta files can manipulated help us get better picture corpus. , helpful, though essential, start framing input data. ’re now ready start exploring. usual, functions purrr prove useful iterating large JSON files. First, look basic summary data: Numbers (n) packages total (value) dependencies: dependencies used frequently? Alternate approach using frame instead purrr functions subsetting data. Note gets Depends suggests (really SoftwareApplication types mentioned)","code":"download.file(\"https://github.com/codemeta/codemetar/raw/main/inst/notebook/ropensci.json\",               \"ropensci.json\") frame <- system.file(\"schema/frame_schema.json\", package=\"codemetar\")  corpus <-      jsonld_frame(\"ropensci.json\", frame) %>%     fromJSON(simplifyVector = FALSE) %>%     getElement(\"@graph\") ## deal with nulls explicitly by starting with map pkgs <- map(corpus, \"name\") %>% compact() %>% as.character()  # keep only those with package identifiers (names) keep <- map_lgl(corpus, ~ length(.x$identifier) > 0) corpus <- corpus[keep]  ## now we can just do all_pkgs <- map_chr(corpus, \"name\") head(all_pkgs) [1] \"AntWeb: programmatic interface to the AntWeb\"                                 [2] \"aRxiv: Interface to the arXiv API\"                                            [3] \"chromer: Interface to Chromosome Counts Database API\"                         [4] \"ckanr: Client for the Comprehensive Knowledge Archive Network ('CKAN') 'API'\" [5] \"dashboard: A package status dashboard\"                                        [6] \"ggit: Git Graphics\" ## 60 unique maintainers map_chr(corpus, c(\"maintainer\", \"familyName\")) %>% unique() %>% length() [1] 61 ## Mostly Scott map_chr(corpus, c(\"maintainer\", \"familyName\")) %>%    as_tibble() %>%   group_by(value) %>%   tally(sort=TRUE) ## number of co-authors ...  map_int(corpus, function(r) length(r$author)) %>%    as_tibble() %>%   group_by(value) %>%   tally(sort=TRUE) ## Contributors isn't used as much... map_int(corpus, function(r) length(r$contributor)) %>%    as_tibble() %>%   group_by(value) %>%   tally(sort=TRUE) map_int(corpus, function(r) length(r$softwareRequirements))  %>%    as_tibble() %>%   group_by(value) %>%   tally(sort=TRUE) corpus %>% map_df(function(x){   ## single, unboxed dep   if(\"name\" %in% names(x$softwareRequirements))     dep <- x$name   else if(\"name\" %in% names(x$softwareRequirements[[1]]))     dep <- map_chr(x$softwareRequirements, \"name\")   else { ## No requirementsß     dep <- NA   }      tibble(identifier = x$identifier, dep = dep) }) -> dep_df   dep_df %>% group_by(dep) %>%    tally(sort = TRUE) dep_frame <- '{   \"@context\": \"https://raw.githubusercontent.com/codemeta/codemeta/master/codemeta.jsonld\",   \"@explicit\": \"true\",   \"name\": {} }' jsonld_frame(\"ropensci.json\", dep_frame) %>%    fromJSON() %>%    getElement(\"@graph\") %>%   filter(type == \"SoftwareApplication\") %>%   group_by(name) %>%    tally(sort = TRUE) #  summarise(count(name))"},{"path":"https://docs.ropensci.org/codemetar/articles/validation-in-json-ld.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Validation in JSON-LD","text":"Schema validation useful important concept distribution metadata formats XML JSON, standard-provider creates schema (specified XML-schema, XSD, XML documents, json-schema JSON documents). Schemas allow us go beyond basic notation making sure file simply valid XML valid JSON, requirement just read parser. detailing metadata must structured, elements must, can, may included, data types may used elements, schema help developers consuming data anticipate details thus build applications know process . data creator, validation convenient way catch data input errors ensure consistent data structure. schema validation must ensure predictable behavior without knowledge specific application going data, tends strict. simple application may care certain fields missing integers mistaken characters, another application differences lead throw fatal errors. approach JSON-LD less prescriptive. JSON-LD uses notion “framing” let application specify expects data structured. JSON frames allow developer consuming data handle many issues schema validation previously assured. Readers consult official json-ld framing documentation details approach.","code":"library(jsonld) library(jsonlite) library(magrittr) library(codemetar)"},{"path":"https://docs.ropensci.org/codemetar/articles/validation-in-json-ld.html","id":"a-motivating-example","dir":"Articles","previous_headings":"","what":"A motivating example:","title":"Validation in JSON-LD","text":"Consider following codemeta document:","code":"codemeta <-  ' {   \"@context\": \"https://doi.org/10.5063/schema/codemeta-2.0\",   \"@type\": \"SoftwareSourceCode\",   \"name\": \"codemetar: Generate CodeMeta Metadata for R Packages\",   \"datePublished\":\" 2017-05-20\",   \"version\": 1.0,   \"author\": [     {       \"@type\": \"Person\",       \"givenName\": \"Carl\",       \"familyName\": \"Boettiger\",       \"email\": \"cboettig@gmail.com\",       \"@id\": \"http://orcid.org/0000-0002-1642-628X\"     }],   \"maintainer\":  {\"@id\": \"http://orcid.org/0000-0002-1642-628X\"} } ' jsonld::jsonld_compact(codemeta, \"https://doi.org/10.5063/schema/codemeta-2.0\") {   \"@context\": \"https://doi.org/10.5063/schema/codemeta-2.0\",   \"type\": \"SoftwareSourceCode\",   \"author\": {     \"id\": \"http://orcid.org/0000-0002-1642-628X\",     \"type\": \"Person\",     \"email\": \"cboettig@gmail.com\",     \"familyName\": \"Boettiger\",     \"givenName\": \"Carl\"   },   \"datePublished\": \" 2017-05-20\",   \"maintainer\": {     \"id\": \"http://orcid.org/0000-0002-1642-628X\"   },   \"name\": \"codemetar: Generate CodeMeta Metadata for R Packages\",   \"version\": 1 }"},{"path":"https://docs.ropensci.org/codemetar/articles/validation-in-json-ld.html","id":"framing-subsetting-data","dir":"Articles","previous_headings":"","what":"Framing: subsetting data","title":"Validation in JSON-LD","text":"default, frames return input data, application may interested subset. Often sufficient just ignore additional terms: example ’s just easy application work author elements whether dropped elements meta$version. restrict frame returning nodes explicitly mention, can use keyword @explicit: Note returned requested fields graph (along @id @type, always included provided, since may required interpret data properly). frame extracts givenName familyName Person node finds, regardless occurs, omitting rest data. Note since frame requests elements top level, returned , match separate entry @graph. example one person meta[[1]], matches appear meta[[2]], etc. Note returns un-ordered.","code":"frame <- '{   \"@context\": \"https://doi.org/10.5063/schema/codemeta-2.0\",   \"@explicit\": \"true\",   \"@type\": \"Person\",   \"givenName\": {},   \"familyName\": {} }'  meta <-    jsonld_frame(codemeta, frame)  %>%   fromJSON(codemeta, simplifyVector = FALSE) %>%    getElement(\"@graph\")   meta[[1]] $id [1] \"http://orcid.org/0000-0002-1642-628X\"  $type [1] \"Person\"  $familyName [1] \"Boettiger\"  $givenName [1] \"Carl\""},{"path":"https://docs.ropensci.org/codemetar/articles/validation-in-json-ld.html","id":"framing-expanding-node-references","dir":"Articles","previous_headings":"","what":"Framing: expanding node references","title":"Validation in JSON-LD","text":"underlying data can often expressed different ways, particularly dealing nested data. Framing can great help reshape data structure required application. instance, natural access email maintainer manner author, fails example maintainer defined reference ID: can confirm maintainer just ID: can use frame special directive \"@embed\": \"@always\" say want full maintainer information embedded just referred id alone. can subset maintainer just like author. Now can see email successfully returned matching ID author data.","code":"meta <- fromJSON(codemeta, simplifyVector = FALSE)  paste(\"For complaints, email\", meta$maintainer$email) [1] \"For complaints, email \" meta$maintainer $`@id` [1] \"http://orcid.org/0000-0002-1642-628X\" frame <- '{   \"@context\": \"https://doi.org/10.5063/schema/codemeta-2.0\",   \"@embed\": \"@always\" }'   meta <-    jsonld_frame(codemeta, frame) %>%   fromJSON(codemeta, simplifyVector = FALSE) %>%    getElement(\"@graph\") %>% getElement(1) paste(\"For complaints, email\", meta$maintainer$email) [1] \"For complaints, email cboettig@gmail.com\""},{"path":"https://docs.ropensci.org/codemetar/articles/validation-in-json-ld.html","id":"handling-unexpected-types","dir":"Articles","previous_headings":"","what":"Handling unexpected types","title":"Validation in JSON-LD","text":"JSON-LD routines simply refuse compact data type differs context expects. sample data file declares buildInstructions included text, differs context file explicitly states buildInstructions URL: perform framing compaction operation, buildInstructions gets de-referenced codemeta:buildInstructions, match context. means application asks meta$buildInstructions: just get NULL, rather unexpected type object (e.g. string URL.) Note data lost, simply dereferenced: Note behavior happens data declared \"@type\": \"Text\" explicitly. JSON-LD algorithms believe told type look consistency declared types. give text declare \"@type\": \"URL\", don’t declare type , JSON-LD algorithms won’t know anything amiss property compacted usual.","code":"codemeta <-  ' {   \"@context\": \"https://purl.org/codemeta/2.0\",   \"@type\": \"SoftwareSourceCode\",   \"name\": \"codemetar: Generate CodeMeta Metadata for R Packages\",   \"buildInstructions\": {        \"@value\": \"Just install this package using devtools::install_github\",        \"@type\": \"Text\"   } } ' meta <-   jsonld_frame(codemeta, '{\"@context\": \"https://purl.org/codemeta/2.0\"}') %>%    fromJSON(codemeta, simplifyVector = FALSE) %>%     getElement(\"@graph\") %>% getElement(1)      ## above is same as compacting: #jsonld_compact(codemeta, \"https://doi.org/10.5063/schema/codemeta-2.0\") %>%  #  fromJSON(codemeta, simplifyVector = FALSE)  meta$buildInstructions NULL names(meta) [1] \"type\"                       \"name\"                       [3] \"codemeta:buildInstructions\" meta[\"codemeta:buildInstructions\"] $`codemeta:buildInstructions` $`codemeta:buildInstructions`$type [1] \"Text\"  $`codemeta:buildInstructions`$`@value` [1] \"Just install this package using devtools::install_github\""},{"path":"https://docs.ropensci.org/codemetar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Boettiger. Author, maintainer, copyright holder. Anna Krystalli. Reviewer, contributor. Toph Allen. Reviewer. Maëlle Salmon. Contributor, author. . Funder.            https://ropensci.org/ Katrin Leinweber. Contributor. Noam Ross. Contributor. Arfon Smith. Contributor. Jeroen Ooms. Contributor. Sebastian Meyer. Contributor. Michael Rustler. Contributor. Hauke Sonnenberg. Contributor. Sebastian Kreutzer. Contributor. Thierry Onkelinx. Contributor.","code":""},{"path":"https://docs.ropensci.org/codemetar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boettiger C, Salmon M (2024). codemetar: Generate 'CodeMeta' Metadata R Packages. R package version 0.3.5, https://docs.ropensci.org/codemetar/, https://github.com/ropensci/codemetar.","code":"@Manual{,   title = {codemetar: Generate 'CodeMeta' Metadata for R Packages},   author = {Carl Boettiger and Maëlle Salmon},   year = {2024},   note = {R package version 0.3.5, https://docs.ropensci.org/codemetar/},   url = {https://github.com/ropensci/codemetar}, }"},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"codemetar","dir":"","previous_headings":"","what":"Generate CodeMeta Metadata for R Packages","title":"Generate CodeMeta Metadata for R Packages","text":"codemeta package provides minimalist approach generating codemeta based DESCRIPTION CITATION files, codemetar provides additional abilities detect metadata README GitHub sources, provide user feedback, suggestions, messaging. codemetar? ‘Codemeta’ Project defines ‘JSON-LD’ format describing software metadata, detailed https://codemeta.github.io. package provides utilities generate, parse, modify codemeta.jsonld files automatically R packages, well tools examples working codemeta json-ld generally. three main goals: Quickly generate valid codemeta.json file valid R package. , automatically extract much metadata possible using DESCRIPTION file, well extracting metadata common best-practices presence Travis badges README, etc. Facilitate addition metadata fields codemeta.json file, well general manipulation codemeta files. Support ability crosswalk terms used metadata standards, identified Codemeta Project Community, see https://codemeta.github.io/crosswalk/","code":""},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"why-create-a-codemetajson-for-your-package","dir":"","previous_headings":"","what":"Why create a codemeta.json for your package?","title":"Generate CodeMeta Metadata for R Packages","text":"bother creating codemeta.json package? R packages encode lots metadata DESCRIPTION file, README, places, telling users developers package purpose, authors, license, dependencies, information facilitates discovery, adoption, credit software. Unfortunately, software language records metadata different format, information hard search engines, software repositories, developers find integrate. generating codemeta.json file, turn metadata format can easily crosswalk metadata many software languages. CodeMeta built schema.org simple structured data format developed major search engines like Google Bing improve discoverability search. CodeMeta also understood significant software archiving efforts Software Heritage Project, seeks permanently archive open source software. general information CodeMeta Project defining software metadata, see https://codemeta.github.io. particular, new users might want start User Guide, looking learn JSON-LD consuming existing codemeta files see Developer Guide.","code":""},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"create-a-codemetajson-in-one-function-call","dir":"","previous_headings":"","what":"Create a codemeta.json in one function call","title":"Generate CodeMeta Metadata for R Packages","text":"codemetar can take path source package root glean much information possible.  default often within package folder ’ll simply run codemetar::write_codemeta().","code":"codemetar::write_codemeta() … Getting CRAN metadata from RStudio CRAN mirror ✔ Got CRAN metadata! … Asking README URL from GitHub API ✔ Got README URL! … Asking README URL from GitHub API ✔ Got README URL! … Getting repo topics from GitHub API ✔ Got repo topics! library(\"magrittr\") \"../../codemeta.json\" %>%   details::details(summary = \"codemetar's codemeta.json\",                    lang = \"json\") {   \"@context\": \"https://doi.org/10.5063/schema/codemeta-2.0\",   \"@type\": \"SoftwareSourceCode\",   \"identifier\": \"codemetar\",   \"description\": \"The 'Codemeta' Project defines a 'JSON-LD' format for describing software metadata, as detailed at <https://codemeta.github.io>. This package provides utilities to generate, parse, and modify 'codemeta.json' files automatically for R packages, as well as tools and examples for working with 'codemeta.json' 'JSON-LD' more generally.\",   \"name\": \"codemetar: Generate 'CodeMeta' Metadata for R Packages\",   \"relatedLink\": [\"https://github.com/ropensci/codemetar\", \"https://docs.ropensci.org/codemetar/\", \"https://CRAN.R-project.org/package=codemetar\"],   \"codeRepository\": \"https://github.com/ropensci/codemetar\",   \"issueTracker\": \"https://github.com/ropensci/codemetar/issues\",   \"license\": \"https://spdx.org/licenses/GPL-3.0\",   \"version\": \"0.3.5\",   \"programmingLanguage\": {     \"@type\": \"ComputerLanguage\",     \"name\": \"R\",     \"url\": \"https://r-project.org\"   },   \"runtimePlatform\": \"R version 4.2.0 (2022-04-22)\",   \"provider\": {     \"@id\": \"https://cran.r-project.org\",     \"@type\": \"Organization\",     \"name\": \"Comprehensive R Archive Network (CRAN)\",     \"url\": \"https://cran.r-project.org\"   },   \"author\": [     {       \"@type\": \"Person\",       \"givenName\": \"Carl\",       \"familyName\": \"Boettiger\",       \"email\": \"cboettig@gmail.com\",       \"@id\": \"https://orcid.org/0000-0002-1642-628X\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Maëlle\",       \"familyName\": \"Salmon\",       \"@id\": \"https://orcid.org/0000-0002-2815-0399\"     }   ],   \"contributor\": [     {       \"@type\": \"Person\",       \"givenName\": \"Anna\",       \"familyName\": \"Krystalli\",       \"@id\": \"https://orcid.org/0000-0002-2378-4915\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Maëlle\",       \"familyName\": \"Salmon\",       \"@id\": \"https://orcid.org/0000-0002-2815-0399\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Katrin\",       \"familyName\": \"Leinweber\",       \"@id\": \"https://orcid.org/0000-0001-5135-5758\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Noam\",       \"familyName\": \"Ross\",       \"@id\": \"https://orcid.org/0000-0002-2136-0000\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Arfon\",       \"familyName\": \"Smith\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Jeroen\",       \"familyName\": \"Ooms\",       \"@id\": \"https://orcid.org/0000-0002-4035-0289\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Sebastian\",       \"familyName\": \"Meyer\",       \"@id\": \"https://orcid.org/0000-0002-1791-9449\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Michael\",       \"familyName\": \"Rustler\",       \"@id\": \"https://orcid.org/0000-0003-0647-7726\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Hauke\",       \"familyName\": \"Sonnenberg\",       \"@id\": \"https://orcid.org/0000-0001-9134-2871\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Sebastian\",       \"familyName\": \"Kreutzer\",       \"@id\": \"https://orcid.org/0000-0002-0734-2199\"     },     {       \"@type\": \"Person\",       \"givenName\": \"Thierry\",       \"familyName\": \"Onkelinx\",       \"@id\": \"https://orcid.org/0000-0001-8804-4216\"     }   ],   \"copyrightHolder\": [     {       \"@type\": \"Person\",       \"givenName\": \"Carl\",       \"familyName\": \"Boettiger\",       \"email\": \"cboettig@gmail.com\",       \"@id\": \"https://orcid.org/0000-0002-1642-628X\"     }   ],   \"funder\": [     {       \"@type\": \"Organization\",       \"name\": \"rOpenSci\"     }   ],   \"maintainer\": [     {       \"@type\": \"Person\",       \"givenName\": \"Carl\",       \"familyName\": \"Boettiger\",       \"email\": \"cboettig@gmail.com\",       \"@id\": \"https://orcid.org/0000-0002-1642-628X\"     }   ],   \"softwareSuggestions\": [     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"withr\",       \"name\": \"withr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=withr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"covr\",       \"name\": \"covr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=covr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"details\",       \"name\": \"details\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=details\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"dplyr\",       \"name\": \"dplyr\",       \"version\": \">= 0.7.0\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=dplyr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"jsonld\",       \"name\": \"jsonld\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=jsonld\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"jsonvalidate\",       \"name\": \"jsonvalidate\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=jsonvalidate\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"knitr\",       \"name\": \"knitr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=knitr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"printr\",       \"name\": \"printr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=printr\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"rmarkdown\",       \"name\": \"rmarkdown\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=rmarkdown\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"testthat\",       \"name\": \"testthat\",       \"version\": \">= 3.0.0\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=testthat\"     },     {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"usethis\",       \"name\": \"usethis\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=usethis\"     }   ],   \"softwareRequirements\": {     \"1\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"R\",       \"name\": \"R\",       \"version\": \">= 3.2.0\"     },     \"2\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"commonmark\",       \"name\": \"commonmark\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=commonmark\"     },     \"3\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"crul\",       \"name\": \"crul\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=crul\"     },     \"4\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"desc\",       \"name\": \"desc\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=desc\"     },     \"5\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"gert\",       \"name\": \"gert\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=gert\"     },     \"6\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"gh\",       \"name\": \"gh\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=gh\"     },     \"7\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"jsonlite\",       \"name\": \"jsonlite\",       \"version\": \">= 1.6\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=jsonlite\"     },     \"8\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"magrittr\",       \"name\": \"magrittr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=magrittr\"     },     \"9\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"memoise\",       \"name\": \"memoise\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=memoise\"     },     \"10\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"methods\",       \"name\": \"methods\"     },     \"11\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"pingr\",       \"name\": \"pingr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=pingr\"     },     \"12\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"purrr\",       \"name\": \"purrr\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=purrr\"     },     \"13\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"remotes\",       \"name\": \"remotes\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=remotes\"     },     \"14\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"sessioninfo\",       \"name\": \"sessioninfo\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=sessioninfo\"     },     \"15\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"stats\",       \"name\": \"stats\"     },     \"16\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"urltools\",       \"name\": \"urltools\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=urltools\"     },     \"17\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"xml2\",       \"name\": \"xml2\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=xml2\"     },     \"18\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"cli\",       \"name\": \"cli\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=cli\"     },     \"19\": {       \"@type\": \"SoftwareApplication\",       \"identifier\": \"codemeta\",       \"name\": \"codemeta\",       \"provider\": {         \"@id\": \"https://cran.r-project.org\",         \"@type\": \"Organization\",         \"name\": \"Comprehensive R Archive Network (CRAN)\",         \"url\": \"https://cran.r-project.org\"       },       \"sameAs\": \"https://CRAN.R-project.org/package=codemeta\"     },     \"SystemRequirements\": null   },   \"isPartOf\": \"https://ropensci.org\",   \"keywords\": [\"metadata\", \"codemeta\", \"ropensci\", \"citation\", \"credit\", \"linked-data\", \"json-ld\", \"r\", \"rstats\", \"r-package\", \"peer-reviewed\"],   \"fileSize\": \"NAKB\",   \"releaseNotes\": \"https://github.com/ropensci/codemetar/blob/main/NEWS.md\",   \"readme\": \"https://github.com/ropensci/codemetar/blob/main/README.md\",   \"contIntegration\": [\"https://github.com/ropensci/codemetar/actions\", \"https://codecov.io/github/ropensci/codemetar?branch=main\"],   \"developmentStatus\": \"https://www.repostatus.org/\",   \"review\": {     \"@type\": \"Review\",     \"url\": \"https://github.com/ropensci/software-review/issues/130\",     \"provider\": \"https://ropensci.org\"   } }"},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"keep-codemetajson-up-to-date","dir":"","previous_headings":"","what":"Keep codemeta.json up-to-date","title":"Generate CodeMeta Metadata for R Packages","text":"keep codemeta.json --date? particular, keep date DESCRIPTION? codemetar longer supports automatic sync, quite methods available . Choose one fits well workflow! rely devtools::release() since ask whether updated codemeta.json file exists. use git pre-commit hook prevents commit done DESCRIPTION newer codemeta.json. can use precommit package ’s “codemeta-description-updated” hook. ’s pre-commit hook (.e. don’t one created e.g. usethis::use_readme_rmd()), can create using use GitHub actions. Refer GitHub actions docs https://github.com/features/actions, example workflow provided package (type system.file(\"templates\", \"codemeta-github-actions.yml\", package = \"codemetar\")). can use cm-skip keyword commit message don’t want run specific commit. example workflow provided setup run push made master branch. setup designed ’re using git flow setup master branch committed pushed via pull requests. PR merge (completion GitHub action), master branch always date long don’t make manual changes codemeta.json file, won’t merge conflicts. Alternatively, can GitHub actions route run codemetar commit. try remember run git pull making new changes local project. However, forgot pull already committed new changes, fret , can use (git pull --rebase) rewind local changes top current upstream HEAD.","code":"script = readLines(system.file(\"templates\", \"description-codemetajson-pre-commit.sh\", package = \"codemetar\")) usethis::use_git_hook(\"pre-commit\",                      script = script) on:   push:     branches: master     paths:       - DESCRIPTION       - .github/workflows/main.yml  name: Render codemeta jobs:   render:     name: Render codemeta     runs-on: macOS-latest     if: \"!contains(github.event.head_commit.message, 'cm-skip')\"     steps:       - uses: actions/checkout@v1       - uses: r-lib/actions/setup-r@v1       - name: Install codemetar         run: Rscript -e 'install.packages(\"codemetar\")'       - name: Render codemeta         run: Rscript -e 'codemetar::write_codemeta()'       - name: Commit results         run: |           git commit codemeta.json -m 'Re-build codemeta.json' || echo \"No changes to commit\"           git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:${{ github.ref }} || echo \"No changes to commit\""},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"how-to-improve-your-packages-codemetajson","dir":"","previous_headings":"","what":"How to improve your package’s codemeta.json?","title":"Generate CodeMeta Metadata for R Packages","text":"best way ensure codemeta.json complete possible set metadata usual places, needed add metadata. ensure metadata usual places, can run codemetar::give_opinions().","code":""},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"usual-terms-in-description","dir":"","previous_headings":"How to improve your package’s codemeta.json?","what":"Usual terms in DESCRIPTION","title":"Generate CodeMeta Metadata for R Packages","text":"Fill BugReports URL. Using Authors@R notation allows much richer specification author roles, correct parsing given vs family names, email addresses. current implementation, developers may specify ORCID url author optional comment field Authors@R, e.g. allow codemetar associate identifier person. clearly something hack since R’s person object lacks explicit notion id, may frowned upon.","code":"Authors@R: c(person(given = \"Carl\",              family = \"Boettiger\",              role = c(\"aut\", \"cre\", \"cph\"),              email = \"cboettig@gmail.com\",              comment = c(ORCID = \"0000-0002-1642-628X\")))"},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"usual-terms-in-the-readme","dir":"","previous_headings":"How to improve your package’s codemeta.json?","what":"Usual terms in the README","title":"Generate CodeMeta Metadata for R Packages","text":"README, can use badges continuous integration, repo development status (repostatus.org lifecycle.org), provider (e.g. CRAN).","code":""},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"github-repo-topics","dir":"","previous_headings":"How to improve your package’s codemeta.json?","what":"GitHub repo topics","title":"Generate CodeMeta Metadata for R Packages","text":"package source hosted GitHub ’s way codemetar determine (URL DESCRIPTION, git remote URL) codemetar use GitHub repo topics keywords codemeta.json. also set keywords DESCRIPTION (see next section), codemetar merge two lists.","code":""},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"set-even-more-terms-via-description","dir":"","previous_headings":"How to improve your package’s codemeta.json?","what":"Set even more terms via DESCRIPTION","title":"Generate CodeMeta Metadata for R Packages","text":"general, setting metadata via places stated earlier best solution metadata used tools (e.g. URLs DESCRIPTION can help package users, codemetar). DESCRIPTION file natural place specify metadata R package. codemetar package can detect certain additional terms CodeMeta context. Almost additional codemeta field can added read DESCRIPTION codemeta.json file (see codemetar:::additional_codemeta_terms list). CRAN requires prefix additional terms indicate use schema.org explicitly, e.g. keywords specified DESCRIPTION file : applicable, override values otherwise guessed source repository. Use comma-separated lists separate multiple values property, e.g. keywords. See DESCRIPTION file codemetar package example.","code":"X-schema.org-keywords: metadata, codemeta, ropensci, citation, credit, linked-data"},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"set-the-branch-that-codemetar-references","dir":"","previous_headings":"How to improve your package’s codemeta.json?","what":"Set the branch that codemetar references","title":"Generate CodeMeta Metadata for R Packages","text":"number places codemetar reference github branch code hosted github (e.g. release notes, readme, etc.). default, codemetar use name “master” can change whatever default branch setting option “codemeta_branch” (e.g. options(codemeta_branch = \"main\") calling write_codemeta() use branch named “main” default branch).","code":""},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"installation-and-usage-requirements","dir":"","previous_headings":"","what":"Installation and usage requirements","title":"Generate CodeMeta Metadata for R Packages","text":"can install latest version CRAN using: can also install development version codemetar GitHub : optimal results need good internet connection. package queries utils::available.packages() CRAN Bioconductor packages; GitHub API via gh package, finds GitHub repo URL DESCRIPTION git remote. GitHub API queried find preferred README, repo topics. use codemetar many packages GITHUB_PAT better; R-hub sysreqs API parse SystemRequirements. machine offline, minimal codemeta.json created. internet connection poor firewalls, codemeta creation might indefinitely hang.","code":"install.packages(\"codemetar\") # install.packages(\"devtools\") devtools::install_github(\"ropensci/codemetar\")"},{"path":"https://docs.ropensci.org/codemetar/index.html","id":"going-further","dir":"","previous_headings":"","what":"Going further","title":"Generate CodeMeta Metadata for R Packages","text":"Check codemetar man tutorials cool stuff can codemeta json-ld. new feature creation minimal schemaorg.json insertion website’s webpage Search Engine Optimization, write_minimeta argument write_codemeta() TRUE. e.g. use code chunk README.Rmd results=\"asis\". Refer Google documentation guidance.","code":"glue::glue('<script type=\"application/ld+json\">       {glue::glue_collapse(readLines(\"schemaorg.json\"), sep = \"\\n\")}     <\/script>')"},{"path":"https://docs.ropensci.org/codemetar/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"CodeMeta project defines JSON-LD format [@jsonld] describing software metadata, based largely schema.org terms. metadata format adopted many leading archives scientific software, including DataCite, Zenodo, DataONE address many needs identified NIH report need “Software Discovery Index” [@SDI]. Many common software metadata formats mapped CodeMeta means crosswalk table [@codemeta], also implemented package. codemetar package provides utilities generate validate codemeta.json files automatically R packages parsing DESCRIPTION file common locations R metadata. package also includes utilities examples parsing working existing codemeta files, includes several vignettes illustrate basic usage package well advanced applications.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/codemetar/reference/codemetar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"codemetar: generate codemeta metadata for R packages — codemetar-package","title":"codemetar: generate codemeta metadata for R packages — codemetar-package","text":"'Codemeta' Project defines 'JSON-LD' format describing software metadata, detailed https://codemeta.github.io. package provides utilities generate, parse, modify 'codemeta.json' files automatically R packages, well tools examples working 'codemeta.json' 'JSON-LD' generally.","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/codemetar-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"codemetar: generate codemeta metadata for R packages — codemetar-package","text":"bother creating codemeta.json package? R packages encode lots metadata DESCRIPTION file, README, places, telling users developers package purpose, authors, license, dependencies, information facilitates discovery, adoption, credit software. Unfortunately, software language records metadata different format, information hard search engines, software repositories, developers find integrate. generating codemeta.json file, turn metadata format can easily crosswalk metadata many software languages. CodeMeta built schema.org simple structured data format developed major search engines like Google Bing improve discoverability search. CodeMeta also understood significant software archiving efforts Software Heritage Project, seeks permanently archive open source software. general information CodeMeta Project defining software metadata, see https://codemeta.github.io. particular, new users might want start User Guide, looking learn JSON-LD consuming existing codemeta files see Developer Guide. codemetar? ‘Codemeta’ Project defines ‘JSON-LD’ format describing software metadata, detailed https://codemeta.github.io. package provides utilities generate, parse, modify codemeta.jsonld files automatically R packages, well tools examples working codemeta json-ld generally. three main goals: Quickly generate valid codemeta.json file valid R package. , automatically extract much metadata possible using DESCRIPTION file, well extracting metadata common best-practices presence Travis badges README, etc. Facilitate addition metadata fields codemeta.json file, well general manipulation codemeta files. Support ability crosswalk terms used metadata standards, identified Codemeta Project Community, see https://codemeta.github.io/crosswalk/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/codemetar/reference/codemetar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"codemetar: generate codemeta metadata for R packages — codemetar-package","text":"Maintainer: Carl Boettiger cboettig@gmail.com (ORCID) [copyright holder] Authors: Maëlle Salmon (ORCID) [contributor] contributors: Anna Krystalli (ORCID) [reviewer, contributor] Toph Allen (ORCID) [reviewer] rOpenSci (https://ropensci.org/) [funder] Katrin Leinweber (ORCID) [contributor] Noam Ross (ORCID) [contributor] Arfon Smith [contributor] Jeroen Ooms (ORCID) [contributor] Sebastian Meyer (ORCID) [contributor] Michael Rustler (ORCID) [contributor] Hauke Sonnenberg (ORCID) [contributor] Sebastian Kreutzer (ORCID) [contributor] Thierry Onkelinx (ORCID) [contributor]","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/create_codemeta.html","id":null,"dir":"Reference","previous_headings":"","what":"create_codemeta — create_codemeta","title":"create_codemeta — create_codemeta","text":"create codemeta list object R manipulation. Similar write_codemeta(), returns R list object rather writing directly file.  See examples.","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/create_codemeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_codemeta — create_codemeta","text":"","code":"create_codemeta(   pkg = \".\",   root = \".\",   id = NULL,   use_filesize = FALSE,   force_update = getOption(\"codemeta_force_update\", TRUE),   verbose = TRUE,   ... )"},{"path":"https://docs.ropensci.org/codemetar/reference/create_codemeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_codemeta — create_codemeta","text":"pkg package path package root, description file (character), codemeta object (list) root pkg codemeta object, optionally give path package root. Default guess current dir. id identifier package, e.g. DOI (resolvable URL) use_filesize whether try estimating adding filesize using base::file.size(). Files .Rbuildignore ignored. force_update Update guessed fields even defined existing codemeta.json file verbose Whether print messages indicating opinions e.g. DESCRIPTION URL. -- See give_opinions; indicating progress internet downloads. ... additional arguments write_json","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/create_codemeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_codemeta — create_codemeta","text":"codemeta list object","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/create_codemeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_codemeta — create_codemeta","text":"","code":"# \\donttest{ path <- system.file(\"\", package=\"codemeta\") cm <- create_codemeta(path) #> … Asking README URL from GitHub API #> ✔ Got README URL! #> … Asking README URL from GitHub API #> ✔ Got README URL! #> … Getting repo topics from GitHub API #> ✔ Got repo topics! #> … Getting CRAN metadata from RStudio CRAN mirror #> ✔ Got CRAN metadata! cm$keywords <- list(\"metadata\", \"ropensci\") # }"},{"path":"https://docs.ropensci.org/codemetar/reference/extract_badges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all badges from Markdown file — extract_badges","title":"Extract all badges from Markdown file — extract_badges","text":"Extract badges Markdown file","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/extract_badges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all badges from Markdown file — extract_badges","text":"","code":"extract_badges(path)"},{"path":"https://docs.ropensci.org/codemetar/reference/extract_badges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all badges from Markdown file — extract_badges","text":"path Path Markdown file","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/extract_badges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all badges from Markdown file — extract_badges","text":"data.frame badge text, link link image.","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/extract_badges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all badges from Markdown file — extract_badges","text":"","code":"if (FALSE) { extract_badges(system.file(\"examples/README_fakepackage.md\", package=\"codemetar\")) }"},{"path":"https://docs.ropensci.org/codemetar/reference/give_opinions.html","id":null,"dir":"Reference","previous_headings":"","what":"Function giving opinions about a package — give_opinions","title":"Function giving opinions about a package — give_opinions","text":"Function giving opinions package","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/give_opinions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function giving opinions about a package — give_opinions","text":"","code":"give_opinions(pkg_path = getwd(), verbose = FALSE)"},{"path":"https://docs.ropensci.org/codemetar/reference/give_opinions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function giving opinions about a package — give_opinions","text":"pkg_path Path package root verbose Whether print message related internet download progress.","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/give_opinions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function giving opinions about a package — give_opinions","text":"data.frame opinions","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::\\%>\\%] details.","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://docs.ropensci.org/codemetar/reference/write_codemeta.html","id":null,"dir":"Reference","previous_headings":"","what":"write_codemeta — write_codemeta","title":"write_codemeta — write_codemeta","text":"write codemeta.json file given package.  function basically wrapper around create_codemeta() create codemeta object write JSON-LD-formatted file one command. can also used simply write JSON-LD existing object created create_codemeta().","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/write_codemeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_codemeta — write_codemeta","text":"","code":"write_codemeta(   pkg = \".\",   path = \"codemeta.json\",   root = \".\",   id = NULL,   use_filesize = TRUE,   force_update = getOption(\"codemeta_force_update\", TRUE),   use_git_hook = NULL,   verbose = TRUE,   write_minimeta = FALSE,   ... )"},{"path":"https://docs.ropensci.org/codemetar/reference/write_codemeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_codemeta — write_codemeta","text":"pkg package path package root, description file (character), codemeta object (list) path file name output, leave default \"codemeta.json\" root pkg codemeta object, optionally give path package root. Default guess current dir. id identifier package, e.g. DOI (resolvable URL) use_filesize whether try estimating adding filesize using base::file.size(). Files .Rbuildignore ignored. force_update Update guessed fields even defined existing codemeta.json file use_git_hook Deprecated argument. verbose Whether print messages indicating opinions e.g. DESCRIPTION URL. -- See give_opinions; indicating progress internet downloads. write_minimeta whether also create file schemaorg.json corresponds metadata Google validate, inserted webpage SEO. saved \"inst/schemaorg.json\" alongside path (default, \"codemeta.json\"). ... additional arguments write_json","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/write_codemeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_codemeta — write_codemeta","text":"writes codemeta.json file, schemaorg.json write_codemeta TRUE.","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/write_codemeta.html","id":"technical-details","dir":"Reference","previous_headings":"","what":"Technical details","title":"write_codemeta — write_codemeta","text":"pkg codemeta object, function attempt update fields can guess (.e. DESCRIPTION file), overwriting existing data block. case, package root directory current working directory. creating writing codemeta.json first time, function adds \"codemeta.json\" .Rbuildignore.","code":""},{"path":"https://docs.ropensci.org/codemetar/reference/write_codemeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"write_codemeta — write_codemeta","text":"","code":"if (FALSE) { # from anywhere in the package source directory write_codemeta() }"},{"path":[]},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-035","dir":"Changelog","previous_headings":"","what":"codemetar 0.3.5","title":"codemetar 0.3.5","text":"CRAN release: 2022-09-02 HTML5 validation docs [#333]","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-034","dir":"Changelog","previous_headings":"","what":"codemetar 0.3.4","title":"codemetar 0.3.4","text":"CRAN release: 2022-03-16 bugfix vignette increase test suite stability (compatible recent desc release) document changed behavior: write_codemeta() longer takes installed package name.","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-033","dir":"Changelog","previous_headings":"","what":"codemetar 0.3.3","title":"codemetar 0.3.3","text":"CRAN release: 2022-01-03 Now uses existing codemeta package CRAN core functionality. package provides advanced metadata detection minimalist codemeta Return CRAN","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-032","dir":"Changelog","previous_headings":"","what":"codemetar 0.3.2","title":"codemetar 0.3.2","text":"CRAN release: 2021-07-26 Skip CRAN test relying internet connection. Bug fix: Fix regression Windows path handling (#315, @ms609).","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-030","dir":"Changelog","previous_headings":"","what":"codemetar 0.3.0","title":"codemetar 0.3.0","text":"CRAN release: 2021-05-10 write_codemetar() can now called anywhere within package directory structure. (#305, @mpadge) Breaking change: write_codemeta() writes JSON file path relative pkg, current directory. (#303, @ThierryO) Added documentation changing default branch (#302, @jonkeane) Breaking change: Relatedly, longer possible use write_codemeta() installed packages, case one use create_codemeta() together jsonlite::write_json(). Use R.Version() instead R.version allow mocking tests. Bug fix: now able parse README badges table non badges links. Bug fix: guess_fileSize() properly handles .Rbuildignore (#299, @ThierryO). Bug fix: create_codemetar() handles minimal packages (#298, @ThierryO).","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-019-2020-07-16","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.9 2020-07-16","title":"codemetar 0.1.9 2020-07-16","text":"CRAN release: 2020-07-18","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"deprecation-0-1-9","dir":"Changelog","previous_headings":"","what":"Deprecation","title":"codemetar 0.1.9 2020-07-16","text":"use_git_hook argument write_codemeta() deprecated. Solutions keeping DESCRIPTION codemeta.json sync available docs. drops crosswalk, [#288]","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"enhancements-0-1-9","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"codemetar 0.1.9 2020-07-16","text":"Docs improved make better case codemetar. Changes way codeRepository guessed. codemetar can now recognize URL GitHub, GitLab, Bitbucket, R-Forge among several URLs DESCRIPTION, assign codeRepository. URL DESCRIPTION providers, guess_github() called. Adds documentation internet needs verbosity steps downloading information web (#270, @Bisaloo) New argument write_minimeta write_codemeta() indicating whether also create file schemaorg.json corresponds metadata Google validate, inserted webpage SEO. saved “schemaorg.json” alongside path (default, “codemeta.json”). functionality requires jsonld package (listed Suggests). Updated GitHub action template run pushes master branch added explanation works readme. (@jonkeane)","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"bug-fixes-0-1-9","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"codemetar 0.1.9 2020-07-16","text":"Fix detecting rOpenSci review badge (@sckott, #236) Fix extraction ORCID composite comment (@billy34, #231) Fix bug crosswalking (#243) Bug fix: codeRepository updated ’s URL DESCRIPTION. Bug fix: README information now updated codemeta_readme(). Previously e.g. developmentStatus set previously, never updated.","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"internals-0-1-9","dir":"Changelog","previous_headings":"","what":"Internals","title":"codemetar 0.1.9 2020-07-16","text":"Code cleaning following book Martin, Robert C. Clean code: handbook agile software craftsmanship. Pearson Education, 2009. (@hsonne, #201, #202, #204, #205, #206, #207, #209, #210, #211, #212, #216, #218, #219, #220, #221). Use re-usable Rmd pieces README, intro vignette man pages reduce copy-pasting.","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-018-2019-05","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.8 2019-05","title":"codemetar 0.1.8 2019-05","text":"CRAN release: 2019-04-22 address internet timeout issues tidy source code update test suite reflect newly available metadata. write_codemeta() create_codemeta(): use_filesize = FALSE now default estimation file size leave unwanted files behind PR #239. Furthermore, way file size calculated changed: used size package built pkgbuild::build(), took rather long. Now size calculated based source files minus files excluded via.Rbuildignore (file exists). write_codemeta(): default argument use_git_hook now FALSE avoid unwanted alteration user’s git environment issue #240. Package dependency ‘pkgbuild’ dropped. write_codemeta() crash anymore CITATION file contains line citation(auto = meta) Issue #238.","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-017-2018-12","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.7 2018-12","title":"codemetar 0.1.7 2018-12","text":"CRAN release: 2019-03-12 jsonld used crosswalk() codemeta_validate() now optional dependency (Suggests rather Imports). CodeRepository URL now cleaned bit (removing direct link README). write_codemeta() gains new argument use_git_hook make creation DESCRIPTION/codemeta.json git pre-commit hook optional. create_codemeta() write_codemeta() gain new argument use_filesize make building package get size optional. Encoding bug fixed extract_badges(). extract_badges() now uses commonmark xml2 instead regular expressions. pkgbuild now used directly instead devtools. give_opinion() now recognizes lifecycle badges, repostatus.org badges.","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-016-2018-04","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.6 2018-04","title":"codemetar 0.1.6 2018-04","text":"CRAN release: 2018-05-04 New functions extract_badges extracting information badges Markdown file. give_opinion giving opiniated advice package metadata Changes create_codemeta output relatedLink field now include provider URL URL(s) DESCRIPTION code repository maintainer now list allowing several maintainers since e.g. BioConductor a4 package two maintainers. one CI service among Travis, Appveyor Circle CI used shown via README badge ’re added contIntegration field. URLs codecov coveralls badges also added contIntegration field. repo status inferred README now 1) URL instead word 2) recognizes either repostatus.org Tidyverse lifecycle badges. present, priority given Repository BugReports fields DESCRIPTION filling codeRepository issueTracker fields codemeta.json (means working fork won’t change ). ability parse CRAN-allowed MARC roles. badge rOpenSci onboarding review review issue closed, basic review metadata added codemeta.json dependencies, provider guessed CRAN BioConductor, canonic CRAN/BioConductor URL added codemeta.json sameAs, unless ’s GitHub repo mentioned Remotes DESCRIPTION, case sameAs GitHub repo. CRAN now correctly translated “Comprehensive R Archive Network” codeRepository guessed GitHub repo (via URL field DESCRIPTION via git remote URL), repo topics queried via GitHub API V3 added keywords (combination keywords stored X-schema.org-keywords field DESCRIPTION) SystemRequirements now parsed using https://sysreqs.r-hub.io/, outputting URLs stored softwareRequirements Help remind update codemeta.json regularly: Writing codemeta.json first time adds git pre-commit hook suggests adding release question devtools::release. Internal changes Now uses desc parse DESCRIPTION files. Package license changed GPL code borrowed usethis Uses crul instead httr uses crul check URLs. write_codemeta uses Rbuildignore pre-commit git hook function called package folder directly path argument equal “codemeta.json” calls available.packages() guess_provider now happen inside memoised functions. codemeta_readme function.","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-015-2018-03-21","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.5 2018-03-21","title":"codemetar 0.1.5 2018-03-21","text":"CRAN release: 2018-03-21 Default DOI-based schema. (previous CN issues now resolved)","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-014-2018-02-12","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.4 2018-02-12","title":"codemetar 0.1.4 2018-02-12","text":"CRAN release: 2018-02-12 Allow vignettes gracefully handle network timeout errors may occur CRAN’s Windows build server.","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-013-2018-02-08","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.3 2018-02-08","title":"codemetar 0.1.3 2018-02-08","text":"CRAN release: 2018-02-08 CRAN release Switch https://purl.org/ based URIs JSON-LD Context file instead DOI, due frequent failure content negotiation DataCite servers (#34) bugfix UTF-8 characters CITATION files (#44) bugfix git URLs Use https ORCID @id URIs","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-012","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.2","title":"codemetar 0.1.2","text":"JOSS release","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-011","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.1","title":"codemetar 0.1.1","text":"Post onboarding release","code":""},{"path":"https://docs.ropensci.org/codemetar/news/index.html","id":"codemetar-010","dir":"Changelog","previous_headings":"","what":"codemetar 0.1.0","title":"codemetar 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
